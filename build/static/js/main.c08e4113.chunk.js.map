{"version":3,"sources":["routes/components/Route/index.tsx","modules/http/infra/usecases/AxiosClient/index.ts","services/httpService.ts","modules/http/domain/usecases/HttpHelper.ts","screens/Auth/SignIn/index.tsx","routes/RoutesGroups/Auth.routes.tsx","routes/Routes.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["Route","Component","component","rest","render","AxiosClient","axiosInstance","headers","this","axios","create","validateStatus","timeout","postParams","a","url","body","post","received","response","statusCode","status","data","getParams","get","patchParams","patch","deleteParams","delete","AppHttpHelper","httpClient","bind","read","update","createParams","urlencoded","parse","readParams","updateParams","valueToParse","URLSearchParams","Object","keys","forEach","key","append","SignIn","useCallback","AppHttpService","console","log","createUser","AuthRoutes","path","useRouteMatch","Routes","to","AppRoutes","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"iNAYeA,EAPqB,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAyBC,EAA5B,oCAClC,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,kBAAM,cAACH,EAAD,S,wDCkDHI,E,WAjDb,aAAe,yBAJfC,mBAIc,OAFdC,aAEc,EACZC,KAAKF,cAAgBG,IAAMC,SAC3BF,KAAKD,QAAU,CACbI,eAAgB,kBAAM,GACtBC,QAAS,M,+EAIb,WAAcC,GAAd,qBAAAC,EAAA,6DACUC,EAAcF,EAAdE,IAAKC,EAASH,EAATG,KADf,SAE2CR,KAAKF,cAAcW,KAAQF,EAAKC,EAAMR,KAAKD,SAFtF,cAEQW,EAFR,OAGQC,EAA4B,CAChCC,WAAYF,EAASG,OACrBL,KAAME,EAASI,MALnB,kBAOSH,GAPT,gD,+GAUA,WAAaI,GAAb,mBAAAT,EAAA,6DACUC,EAAQQ,EAARR,IADV,SAE2CP,KAAKF,cAAckB,IAAOT,EAAKP,KAAKD,SAF/E,cAEQW,EAFR,OAGQC,EAA4B,CAChCC,WAAYF,EAASG,OACrBL,KAAME,EAASI,MALnB,kBAOSH,GAPT,gD,iHAUA,WAAeM,GAAf,qBAAAX,EAAA,6DACUC,EAAcU,EAAdV,IAAKC,EAASS,EAATT,KADf,SAE2CR,KAAKF,cAAcoB,MAASX,EAAKC,EAAMR,KAAKD,SAFvF,cAEQW,EAFR,OAGQC,EAA4B,CAChCC,WAAYF,EAASG,OACrBL,KAAME,EAASI,MALnB,kBAOSH,GAPT,gD,kHAUA,WAAgBQ,GAAhB,mBAAAb,EAAA,6DACUC,EAAQY,EAARZ,IADV,SAE2CP,KAAKF,cAAcsB,OAAUb,EAAKP,KAAKD,SAFlF,cAEQW,EAFR,OAGQC,EAA4B,CAChCC,WAAYF,EAASG,OACrBL,KAAME,EAASI,MALnB,kBAOSH,GAPT,gD,8DCvCaU,EAFoB,I,WCOjC,WAAYC,GAA0B,yBAFtCA,gBAEqC,EACnCtB,KAAKsB,WAAaA,EAClBtB,KAAKE,OAASF,KAAKE,OAAOqB,KAAKvB,MAC/BA,KAAKwB,KAAOxB,KAAKwB,KAAKD,KAAKvB,MAC3BA,KAAKyB,OAASzB,KAAKyB,OAAOF,KAAKvB,MAC/BA,KAAKoB,OAASpB,KAAKoB,OAAOG,KAAKvB,M,iFAGjC,WAAgB0B,GAAhB,qBAAApB,EAAA,6DACUC,EAAcmB,EAAdnB,IAAKC,EAASkB,EAATlB,KACPmB,EAA8B3B,KAAK4B,MAAMpB,GAFjD,SAG0CR,KAAKsB,WAAWb,KAAQ,CAAEF,MAAKC,KAAMmB,IAH/E,cAGQhB,EAHR,yBAISA,GAJT,gD,gHAOA,WAAckB,GAAd,eAAAvB,EAAA,sEAC0CN,KAAKsB,WAAWN,IAAOa,GADjE,cACQlB,EADR,yBAESA,GAFT,gD,kHAKA,WAAgBmB,GAAhB,qBAAAxB,EAAA,6DACUE,EAAcsB,EAAdtB,KAAMD,EAAQuB,EAARvB,IACRoB,EAA8B3B,KAAK4B,MAAMpB,GAFjD,SAG0CR,KAAKsB,WAAWJ,MAAS,CAAEX,MAAKC,KAAMmB,IAHhF,cAGQhB,EAHR,yBAISA,GAJT,gD,kHAOA,WAAgBQ,GAAhB,eAAAb,EAAA,sEAC0CN,KAAKsB,WAAWF,OAAUD,GADpE,cACQR,EADR,yBAESA,GAFT,gD,0EAKA,SAAcoB,GACZ,IAAMJ,EAA8B,IAAIK,gBAKxC,OAJ6BC,OAAOC,KAAKH,GAC9BI,SAAQ,SAACC,GAClBT,EAAWU,OAAOD,EAAKL,EAAaK,OAE/BT,M,KD7CwB,CADC,IAAI9B,GEgBzByC,EAjBU,WAUvB,OATmBC,sBAAW,sBAAC,4BAAAjC,EAAA,sEACNkC,EAAehB,KAAK,CACzCjB,IAAK,gFAFsB,OACvBI,EADuB,OAI7B8B,QAAQC,IAAI/B,GAJiB,2CAK5B,GAEHgC,GAGE,8BACE,iDCASC,EAV0B,WACvC,IAAQC,EAASC,cAATD,KAER,OACE,cAAC,IAAD,UACE,cAAC,EAAD,CAAOA,KAAI,UAAKA,EAAL,KAAcnD,UAAW4C,OCE3BS,EAPU,kBACvB,eAAC,IAAD,WACE,cAAC,EAAD,CAAOF,KAAK,QAAQnD,UAAWkD,IAC/B,cAAC,IAAD,CAAUI,GAAG,cCEFC,EANa,kBAC1B,cAAC,IAAD,UACE,cAAC,EAAD,OCGWC,EANO,kBACpB,mCACE,cAAC,EAAD,OCDJC,IAASvD,OACP,cAAC,IAAMwD,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c08e4113.chunk.js","sourcesContent":["import React from 'react';\nimport { Route as ReactDOMRoute } from 'react-router-dom';\n\nimport { RouteProps } from './interfaces';\n\nconst Route: React.FC<RouteProps> = ({ component: Component, ...rest }) => (\n  <ReactDOMRoute\n    {...rest}\n    render={() => <Component />}\n  />\n);\n\nexport default Route;\n","import axios, { AxiosInstance, AxiosResponse } from 'axios';\nimport { IHttpClient } from '../../../adapters/HttpClient';\nimport { HeaderModel, IHttpParams, HttpResponse } from '../../../domain/interfaces';\n\nclass AxiosClient implements IHttpClient {\n  axiosInstance: AxiosInstance;\n\n  headers: HeaderModel;\n\n  constructor() {\n    this.axiosInstance = axios.create();\n    this.headers = {\n      validateStatus: () => true,\n      timeout: 25000,\n    };\n  }\n\n  async post<T>(postParams: IHttpParams): Promise<HttpResponse<T>> {\n    const { url, body } = postParams;\n    const received: AxiosResponse<T> = await this.axiosInstance.post<T>(url, body, this.headers);\n    const response: HttpResponse<T> = {\n      statusCode: received.status,\n      body: received.data,\n    };\n    return response;\n  }\n\n  async get<T>(getParams: IHttpParams): Promise<HttpResponse<T>> {\n    const { url } = getParams;\n    const received: AxiosResponse<T> = await this.axiosInstance.get<T>(url, this.headers);\n    const response: HttpResponse<T> = {\n      statusCode: received.status,\n      body: received.data,\n    };\n    return response;\n  }\n\n  async patch<T>(patchParams: IHttpParams): Promise<HttpResponse<T>> {\n    const { url, body } = patchParams;\n    const received: AxiosResponse<T> = await this.axiosInstance.patch<T>(url, body, this.headers);\n    const response: HttpResponse<T> = {\n      statusCode: received.status,\n      body: received.data,\n    };\n    return response;\n  }\n\n  async delete<T>(deleteParams: IHttpParams): Promise<HttpResponse<T>> {\n    const { url } = deleteParams;\n    const received: AxiosResponse<T> = await this.axiosInstance.delete<T>(url, this.headers);\n    const response: HttpResponse<T> = {\n      statusCode: received.status,\n      body: received.data,\n    };\n    return response;\n  }\n}\n\nexport default AxiosClient;\n","import AxiosClient from '../modules/http/infra/usecases/AxiosClient';\nimport HttpHelper from '../modules/http/domain/usecases/HttpHelper';\nimport { IHttpHelper } from '../modules/http/data/usecases/IHttpHelper';\nimport { IHttpClient } from '../modules/http/adapters/HttpClient';\n\nconst AppAxiosClient: IHttpClient = new AxiosClient();\nconst AppHttpHelper: IHttpHelper = new HttpHelper(AppAxiosClient);\n\nexport default AppHttpHelper;\n","import { IHttpClient } from '../../adapters/HttpClient';\nimport { IHttpHelper } from '../../data/usecases/IHttpHelper';\nimport {\n  IHttpDataParams,\n  IHttpHelperBodyParams,\n  IHttpNoDataParams,\n} from '../../data/protocols';\n\nimport { HttpResponse } from '../interfaces';\n\nclass HttpHelper implements IHttpHelper {\n  httpClient: IHttpClient;\n\n  constructor(httpClient: IHttpClient) {\n    this.httpClient = httpClient;\n    this.create = this.create.bind(this);\n    this.read = this.read.bind(this);\n    this.update = this.update.bind(this);\n    this.delete = this.delete.bind(this);\n  }\n\n  async create<T>(createParams: IHttpDataParams): Promise<HttpResponse<T>> {\n    const { url, body } = createParams;\n    const urlencoded: URLSearchParams = this.parse(body);\n    const response: HttpResponse<T> = await this.httpClient.post<T>({ url, body: urlencoded });\n    return response;\n  }\n\n  async read<T>(readParams: IHttpNoDataParams): Promise<HttpResponse<T>> {\n    const response: HttpResponse<T> = await this.httpClient.get<T>(readParams);\n    return response;\n  }\n\n  async update<T>(updateParams: IHttpDataParams): Promise<HttpResponse<T>> {\n    const { body, url } = updateParams;\n    const urlencoded: URLSearchParams = this.parse(body);\n    const response: HttpResponse<T> = await this.httpClient.patch<T>({ url, body: urlencoded });\n    return response;\n  }\n\n  async delete<T>(deleteParams: IHttpNoDataParams): Promise<HttpResponse<T>> {\n    const response: HttpResponse<T> = await this.httpClient.delete<T>(deleteParams);\n    return response;\n  }\n\n  private parse(valueToParse: IHttpHelperBodyParams): URLSearchParams {\n    const urlencoded: URLSearchParams = new URLSearchParams();\n    const objectKeys: string[] = Object.keys(valueToParse);\n    objectKeys.forEach((key) => {\n      urlencoded.append(key, valueToParse[key]);\n    });\n    return urlencoded;\n  }\n}\n\nexport default HttpHelper;\n","import React, { useCallback } from 'react';\n\nimport AppHttpService from '../../../services/httpService';\n\nconst SignIn: React.FC = () => {\n  const createUser = useCallback(async () => {\n    const response = await AppHttpService.read({\n      url: 'https://product-register-api.herokuapp.com/user?id=60b0778562801c0004250111',\n    });\n    console.log(response);\n  }, []);\n\n  createUser();\n\n  return (\n    <div>\n      <p>Ol√° Mundo!</p>\n    </div>\n  );\n};\n\nexport default SignIn;\n","import React from 'react';\nimport { Switch, RouteProps, useRouteMatch } from 'react-router-dom';\n\nimport SignIn from '../../screens/Auth/SignIn';\nimport Route from '../components/Route';\n\nconst AuthRoutes: React.FC<RouteProps> = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={`${path}/`} component={SignIn} />\n    </Switch>\n  );\n};\n\nexport default AuthRoutes;\n","import React from 'react';\nimport { Switch, Redirect } from 'react-router-dom';\n\nimport Route from './components/Route';\nimport { AuthRoutes } from './RoutesGroups';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/auth\" component={AuthRoutes} />\n    <Redirect to=\"/auth\" />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Routes from './Routes';\n\nconst AppRoutes: React.FC = () => (\n  <BrowserRouter>\n    <Routes />\n  </BrowserRouter>\n);\n\nexport default AppRoutes;\n","import React from 'react';\n\nimport AppRoutes from './routes';\n\nconst App: React.FC = () => (\n  <>\n    <AppRoutes />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}